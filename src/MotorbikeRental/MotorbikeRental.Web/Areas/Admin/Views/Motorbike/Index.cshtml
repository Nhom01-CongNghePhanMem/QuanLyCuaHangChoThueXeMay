@using MotorbikeRental.Application.DTOs.Vehicles
@using MotorbikeRental.Application.DTOs.Pagination
@using MotorbikeRental.Domain.Enums.VehicleEnum
@model MotorbikeRental.Application.DTOs.Vehicles.MotorbikeIndexDto
@{
    // Đảm bảo không dùng <title> trong khối mã Razor
    ViewData["Title"] = ViewData["Title"] ?? "Motorbike Management";
    Layout = "~/Areas/Admin/Views/Shared/AdminLayout.cshtml";
    var currentFilter = Model?.CurrentFilter ?? new MotorbikeFilterDto { PageNumber = 1, PageSize = 12 };
    var pageNumber = currentFilter.PageNumber;
    var pageSize = currentFilter.PageSize;
    var totalCount = Model?.PaginatedDataViewModel?.TotalCount ?? 0;
    var totalPages = totalCount > 0 ? (int)Math.Ceiling((double)totalCount / pageSize) : 1;
    var categories = Model?.CategoryViewModels ?? Enumerable.Empty<CategoryDto>();
    var brands = Model?.Brands ?? Enumerable.Empty<string>();
    var statuses = Model?.motorbikeStatuses ?? Enum.GetValues<MotorbikeStatus>();
    var motorbikes = Model?.PaginatedDataViewModel?.Data ?? Enumerable.Empty<MotorbikeListDto>();
}
<!DOCTYPE html>
<html>
<head>
    <title>@ViewData["Title"]</title>
    <!-- Place your CSS here (if not in _Layout.cshtml) -->
</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h1 class="mb-0">@ViewData["Title"]</h1>
                    <div>
                        <a href="@Url.Action("Create", "Motorbike")" class="btn btn-success">
                            <i class="fas fa-plus me-1"></i>Add New Motorbike
                        </a>
                        <a href="@Url.Action("Export", "Motorbike")" class="btn btn-outline-primary">
                            <i class="fas fa-download me-1"></i>Export
                        </a>
                    </div>
                </div>

                <!-- Filter Section -->
                <div class="card mb-4 shadow-sm">
                    <div class="card-header bg-primary text-white">
                        <h5 class="mb-0">
                            <i class="fas fa-filter me-2"></i>Filter Options
                        </h5>
                    </div>
                    <div class="card-body">
                        <form method="get" asp-action="Index" id="filterForm">
                            <div class="row g-3">
                                <div class="col-md-3">
                                    <label for="CategoryId" class="form-label fw-semibold">Category</label>
                                    <select name="CategoryId" id="CategoryId" class="form-select">
                                        <option value="">All Categories</option>
                                        @foreach (var category in categories)
                                        {
                                            <option value="@category.CategoryId"
                                                    @(currentFilter.CategoryId == category.CategoryId ? "selected" : "")>
                                                @category.CategoryName
                                            </option>
                                        }
                                    </select>
                                </div>

                                <div class="col-md-3">
                                    <label for="Brand" class="form-label fw-semibold">Brand</label>
                                    <select name="Brand" id="Brand" class="form-select">
                                        <option value="">All Brands</option>
                                        @foreach (var brand in brands)
                                        {
                                            <option value="@brand"
                                                    @(currentFilter.Brand == brand ? "selected" : "")>
                                                @brand
                                            </option>
                                        }
                                    </select>
                                </div>

                                <div class="col-md-3">
                                    <label for="Status" class="form-label fw-semibold">Status</label>
                                    <select name="Status" id="Status" class="form-select">
                                        <option value="">All Status</option>
                                        @foreach (var status in statuses)
                                        {
                                            <option value="@status"
                                                    @(currentFilter.Status == (MotorbikeStatus?)status ? "selected" : "")>
                                                @status.ToString()
                                            </option>
                                        }
                                    </select>
                                </div>

                                <div class="col-md-3">
                                    <label for="PageSize" class="form-label fw-semibold">Items per page</label>
                                    <select name="PageSize" id="PageSize" class="form-select">
                                        <option value="6" @(pageSize == 6 ? "selected" : "")>6 per page</option>
                                        <option value="12" @(pageSize == 12 ? "selected" : "")>12 per page</option>
                                        <option value="24" @(pageSize == 24 ? "selected" : "")>24 per page</option>
                                        <option value="48" @(pageSize == 48 ? "selected" : "")>48 per page</option>
                                    </select>
                                </div>
                            </div>

                            <div class="row mt-4">
                                <div class="col-12">
                                    <input type="hidden" name="PageNumber" value="1" id="PageNumber" />
                                    <button type="submit" class="btn btn-primary me-2">
                                        <i class="fas fa-search me-1"></i>Apply Filter
                                    </button>
                                    <button type="button" class="btn btn-outline-secondary" onclick="clearFilter()">
                                        <i class="fas fa-times me-1"></i>Clear Filter
                                    </button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>

                <div class="d-flex justify-content-between align-items-center mb-3">
                    <div>
                        <span class="text-muted">
                            <i class="fas fa-info-circle me-1"></i>
                            Showing @(totalCount > 0 ? (pageNumber - 1) * pageSize + 1 : 0)
                            to @(Math.Min(pageNumber * pageSize, totalCount))
                            of @totalCount motorbikes
                        </span>
                    </div>
                    <div class="text-muted">
                        <small>Page @pageNumber of @totalPages</small>
                    </div>
                </div>

                <div class="row" id="motorbikeGrid">
                    @if (motorbikes.Any())
                    {
                        @foreach (var motorbike in motorbikes)
                        {
                            <div class="col-xl-3 col-lg-4 col-md-6 col-sm-12 mb-4">
                                <div class="card h-100 motorbike-card shadow-sm">
                                    <div class="position-relative overflow-hidden">
                                        @if (!string.IsNullOrEmpty(motorbike.ImageUrl))
                                        {
                                            <img src="@motorbike.ImageUrl" class="card-img-top" alt="@motorbike.MotorbikeName" style="height: 220px; object-fit: cover;">
                                        }
                                        else
                                        {
                                            <div class="card-img-top bg-light d-flex align-items-center justify-content-center" style="height: 220px;">
                                                <i class="fas fa-motorcycle fa-4x text-muted"></i>
                                            </div>
                                        }

                                    <span class="badge position-absolute top-0 end-0 m-2 fs-6
                                                    @(motorbike.Status == MotorbikeStatus.Available ? "bg-success" :
                                                                                            motorbike.Status == MotorbikeStatus.Rented ? "bg-warning text-dark" :
                                                                                            motorbike.Status == MotorbikeStatus.UnderMaintenance ? "bg-info text-dark" : "bg-danger")">
                                        @(motorbike.Status == MotorbikeStatus.Available ? "Available" :
                                                                            motorbike.Status == MotorbikeStatus.Rented ? "Rented" :
                                                                            motorbike.Status == MotorbikeStatus.UnderMaintenance ? "Maintenance" : motorbike.Status.ToString())
                                </span>

                                        <button class="btn btn-outline-light btn-sm position-absolute top-0 start-0 m-2" type="button">
                                            <i class="far fa-heart"></i>
                                        </button>
                                    </div>

                                    <div class="card-body d-flex flex-column">
                                        <div class="mb-3">
                                            <h5 class="card-title fw-bold mb-2">@motorbike.MotorbikeName</h5>
                                            <div class="d-flex align-items-center mb-1">
                                                <i class="fas fa-tag text-primary me-2"></i>
                                                <span class="text-muted small">@motorbike.CategoryName</span>
                                            </div>
                                            <div class="d-flex align-items-center">
                                                <i class="fas fa-industry text-success me-2"></i>
                                                <span class="text-muted small">@motorbike.Brand</span>
                                            </div>
                                        </div>

                                        <div class="bg-light rounded p-3 mb-3">
                                            <div class="row text-center">
                                                <div class="col-6">
                                                    <div class="border-end">
                                                        <div class="fw-bold text-primary h6 mb-1">@motorbike.HourlyRate.ToString("C0")</div>
                                                        <small class="text-muted">per hour</small>
                                                    </div>
                                                </div>
                                                <div class="col-6">
                                                    <div class="fw-bold text-success h6 mb-1">@motorbike.DailyRate.ToString("C0")</div>
                                                    <small class="text-muted">per day</small>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="mt-auto">
                                            <div class="d-grid gap-2">
                                        @if (motorbike.Status == MotorbikeStatus.Available)
                                                {
                                                    <a href="@Url.Action("Book", "Booking", new { motorbikeId = motorbike.MotorbikeId })" class="btn btn-primary">
                                                        <i class="fas fa-calendar-check me-1"></i>Book Now
                                                    </a>
                                                }
                                                else
                                                {
                                                    <button class="btn btn-secondary" disabled>
                                                        <i class="fas fa-ban me-1"></i>Not Available
                                                    </button>
                                                }

                                                <div class="btn-group" role="group">
                                                    <a href="@Url.Action("Details", "Motorbike", new { id = motorbike.MotorbikeId })" class="btn btn-outline-info btn-sm">
                                                        <i class="fas fa-eye me-1"></i>View
                                                    </a>
                                                    <a href="@Url.Action("Edit", "Motorbike", new { id = motorbike.MotorbikeId })" class="btn btn-outline-warning btn-sm">
                                                        <i class="fas fa-edit me-1"></i>Edit
                                                    </a>
                                                    <button class="btn btn-outline-danger btn-sm" onclick="deleteMotorbike(@motorbike.MotorbikeId)">
                                                        <i class="fas fa-trash me-1"></i>Delete
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="col-12">
                            <div class="card">
                                <div class="card-body text-center py-5">
                                    <div class="mb-4">
                                        <i class="fas fa-search fa-4x text-muted"></i>
                                    </div>
                                    <h4 class="text-muted mb-3">No motorbikes found</h4>
                                    <p class="text-muted mb-4">
                                        @if (currentFilter.CategoryId.HasValue || !string.IsNullOrEmpty(currentFilter.Brand) || currentFilter.Status.HasValue)
                                        {
                                            @:Try adjusting your filter criteria or clear all filters to see available motorbikes.
                                        }
                                        else
                                        {
                                            @:There are no motorbikes in the system. Add some motorbikes to get started.
                                        }
                                    </p>
                                    <div>
                                        @if (currentFilter.CategoryId.HasValue || !string.IsNullOrEmpty(currentFilter.Brand) || currentFilter.Status.HasValue)
                                        {
                                            <button type="button" class="btn btn-outline-primary me-2" onclick="clearFilter()">
                                                <i class="fas fa-times me-1"></i>Clear Filters
                                            </button>
                                        }
                                        <a href="@Url.Action("Create", "Motorbike")" class="btn btn-success">
                                            <i class="fas fa-plus me-1"></i>Add New Motorbike
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                @if (totalPages > 1)
                {
                    <nav aria-label="Motorbike pagination" class="mt-4">
                        <ul class="pagination justify-content-center">
                            <li class="page-item @(pageNumber == 1 ? "disabled" : "")">
                                <a class="page-link" href="javascript:void(0)" onclick="goToPage(@(pageNumber - 1))"
                                   @(pageNumber == 1 ? "tabindex=\"-1\" aria-disabled=\"true\"" : "")>
                                    <i class="fas fa-chevron-left me-1"></i>Previous
                                </a>
                            </li>
                            @{
                                int startPage = Math.Max(1, pageNumber - 2);
                                int endPage = Math.Min(totalPages, pageNumber + 2);
                            }
                            @if (startPage > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="javascript:void(0)" onclick="goToPage(1)">1</a>
                                </li>
                                @if (startPage > 2)
                                {
                                    <li class="page-item disabled">
                                        <span class="page-link">...</span>
                                    </li>
                                }
                            }
                            @for (int i = startPage; i <= endPage; i++)
                            {
                                <li class="page-item @(i == pageNumber ? "active" : "")">
                                    <a class="page-link" href="javascript:void(0)" onclick="goToPage(@i)">@i</a>
                                </li>
                            }
                            @if (endPage < totalPages)
                            {
                                @if (endPage < totalPages - 1)
                                {
                                    <li class="page-item disabled">
                                        <span class="page-link">...</span>
                                    </li>
                                }
                                <li class="page-item">
                                    <a class="page-link" href="javascript:void(0)" onclick="goToPage(@totalPages)">@totalPages</a>
                                </li>
                            }
                            <li class="page-item @(pageNumber == totalPages ? "disabled" : "")">
                                <a class="page-link" href="javascript:void(0)" onclick="goToPage(@(pageNumber + 1))"
                                   @(pageNumber == totalPages ? "tabindex=\"-1\" aria-disabled=\"true\"" : "")>
                                    Next<i class="fas fa-chevron-right ms-1"></i>
                                </a>
                            </li>
                        </ul>
                        <div class="text-center mt-3">
                            <small class="text-muted">
                                <i class="fas fa-info-circle me-1"></i>
                                Showing @pageSize items per page
                            </small>
                        </div>
                    </nav>
                }
            </div>
        </div>
    </div>

    <div id="loadingOverlay" class="position-fixed top-0 start-0 w-100 h-100 d-none" style="background: rgba(0,0,0,0.5); z-index: 9999;">
        <div class="d-flex justify-content-center align-items-center h-100">
            <div class="text-center text-white">
                <div class="spinner-border mb-3" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <div>Loading motorbikes...</div>
            </div>
        </div>
    </div>

    <style>
        .motorbike-card {
            transition: all 0.3s ease;
            border: none;
        }

            .motorbike-card:hover {
                transform: translateY(-8px);
                box-shadow: 0 8px 25px rgba(0,0,0,0.15);
            }

        .card-img-top {
            transition: transform 0.3s ease;
        }

        .motorbike-card:hover .card-img-top {
            transform: scale(1.05);
        }

        .btn-group .btn {
            flex: 1;
        }

        .pagination .page-link {
            border-radius: 0.375rem;
            margin: 0 0.1rem;
            border: 1px solid #dee2e6;
        }

        .pagination .page-item.active .page-link {
            background-color: #0d6efd;
            border-color: #0d6efd;
        }

        .card-header {
            border-bottom: 1px solid rgba(255,255,255,0.2);
        }

        .badge {
            font-weight: 500;
        }

        .bg-light {
            background-color: #f8f9fa !important;
        }
    </style>

    <script>
        function goToPage(pageNumber) {
            if (pageNumber < 1 || pageNumber > @totalPages) return;
            showLoading();
            const url = new URL(window.location.href);
            url.searchParams.set('PageNumber', pageNumber);
            url.searchParams.set('CategoryId', '@(currentFilter.CategoryId?.ToString() ?? "")');
            url.searchParams.set('Brand', '@(currentFilter.Brand ?? "")');
            url.searchParams.set('Status', '@(currentFilter.Status?.ToString() ?? "")');
            url.searchParams.set('PageSize', '@currentFilter.PageSize');
            window.location.href = url.toString();
        }

        function clearFilter() {
            showLoading();
            window.location.href = '@Url.Action("Index", "Motorbike")';
        }

        function deleteMotorbike(motorbikeId) {
            if (confirm('Are you sure you want to delete this motorbike? This action cannot be undone.')) {
                showLoading();
                fetch(`@Url.Action("Delete", "Motorbike")/${motorbikeId}`, {
                    method: 'DELETE',
                    headers: {
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
                    }
                })
                .then(response => {
                    if (response.ok) {
                        location.reload();
                    } else {
                        alert('Error deleting motorbike');
                        hideLoading();
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error deleting motorbike');
                    hideLoading();
                });
            }
        }

        function showLoading() {
            document.getElementById('loadingOverlay').classList.remove('d-none');
        }

        function hideLoading() {
            document.getElementById('loadingOverlay').classList.add('d-none');
        }

        document.getElementById('PageSize').addEventListener('change', function() {
            showLoading();
            document.getElementById('PageNumber').value = '1';
            document.getElementById('filterForm').submit();
        });

        document.addEventListener('DOMContentLoaded', function() {
            hideLoading();
        });

        document.getElementById('filterForm').addEventListener('submit', function() {
            showLoading();
        });
    </script>
</body>
</html>