@model MotorbikeRental.Application.DTOs.Vehicles.MotorbikeDto
@{
    ViewData["Title"] = "Edit Motorbike";
    Layout = "~/Areas/Admin/Views/Shared/AdminLayout.cshtml";
    var categories = ViewBag.Categories as IEnumerable<dynamic>;
    var motorbikeStatuses = ViewBag.MotorbikeStatuses as IEnumerable<MotorbikeRental.Domain.Enums.VehicleEnum.MotorbikeStatus>;
    var conditionStatuses = ViewBag.ConditionStatuses as IEnumerable<MotorbikeRental.Domain.Enums.VehicleEnum.MotorbikeConditionStatus>;
}

<div class="container mt-4">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h3 class="mb-0"><i class="fas fa-edit me-2"></i>Edit Motorbike</h3>
            <a href="@Url.Action("DetailsMotorbike", "Motorbike", new { id = Model.MotorbikeId })" class="btn btn-outline-light btn-sm">
                <i class="fas fa-arrow-left me-1"></i>Back to Details
            </a>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("Edit", "Motorbike", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.MotorbikeId)
                <div class="row g-4">
                    <div class="col-md-4 text-center">
                        @if (!string.IsNullOrEmpty(Model.ImageUrl))
                        {
                            <img src="@Model.ImageUrl" class="img-fluid rounded shadow-sm mb-3" alt="@Model.MotorbikeName" style="max-height: 220px; object-fit: cover;" />
                        }
                        else
                        {
                            <div class="bg-light d-flex align-items-center justify-content-center rounded shadow-sm mb-3" style="height: 220px;">
                                <i class="fas fa-motorcycle fa-4x text-muted"></i>
                            </div>
                        }
                        <div class="mb-3">
                            <label class="form-label fw-semibold">Change Image</label>
                            <input type="file" name="formFile" class="form-control" accept="image/*" />
                            @if (ViewBag.Error != null)
                            {
                                <span class="text-danger">@ViewBag.Error</span>
                            }
                        </div>
                    </div>
                    <div class="col-md-8">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="row mb-3">
                            <div class="col-md-6">
                                @Html.LabelFor(m => m.MotorbikeName, new { @class = "form-label fw-semibold" })
                                @Html.TextBoxFor(m => m.MotorbikeName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.MotorbikeName, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.LabelFor(m => m.CategoryId, new { @class = "form-label fw-semibold" })
                                <select name="CategoryId" class="form-select">
                                    <option value="">-- Select Category --</option>
                                    @if (categories != null)
                                    {
                                        foreach (var c in categories)
                                        {
                                            <option value="@c.CategoryId" @(Model.CategoryId == c.CategoryId ? "selected" : "")>@c.CategoryName</option>
                                        }
                                    }
                                </select>
                                @Html.ValidationMessageFor(m => m.CategoryId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                @Html.LabelFor(m => m.Brand, new { @class = "form-label fw-semibold" })
                                @Html.TextBoxFor(m => m.Brand, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Brand, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.LabelFor(m => m.LicensePlate, new { @class = "form-label fw-semibold" })
                                @Html.TextBoxFor(m => m.LicensePlate, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.LicensePlate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                @Html.LabelFor(m => m.Year, new { @class = "form-label fw-semibold" })
                                @Html.TextBoxFor(m => m.Year, new { @class = "form-control", type = "number", min = "1990", max = "2030" })
                                @Html.ValidationMessageFor(m => m.Year, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.LabelFor(m => m.Color, new { @class = "form-label fw-semibold" })
                                @Html.TextBoxFor(m => m.Color, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Color, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                @Html.LabelFor(m => m.EngineCapacity, new { @class = "form-label fw-semibold" })
                                @Html.TextBoxFor(m => m.EngineCapacity, new { @class = "form-control", type = "number", min = "50", max = "2000" })
                                @Html.ValidationMessageFor(m => m.EngineCapacity, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.LabelFor(m => m.ChassisNumber, new { @class = "form-label fw-semibold" })
                                @Html.TextBoxFor(m => m.ChassisNumber, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.ChassisNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                @Html.LabelFor(m => m.EngineNumber, new { @class = "form-label fw-semibold" })
                                @Html.TextBoxFor(m => m.EngineNumber, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.EngineNumber, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.LabelFor(m => m.Mileage, new { @class = "form-label fw-semibold" })
                                @Html.TextBoxFor(m => m.Mileage, new { @class = "form-control", type = "number", min = "0" })
                                @Html.ValidationMessageFor(m => m.Mileage, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                @Html.LabelFor(m => m.HourlyRate, new { @class = "form-label fw-semibold" })
                                @Html.TextBoxFor(m => m.HourlyRate, new { @class = "form-control", type = "number", min = "0.01", step = "0.01" })
                                @Html.ValidationMessageFor(m => m.HourlyRate, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.LabelFor(m => m.DailyRate, new { @class = "form-label fw-semibold" })
                                @Html.TextBoxFor(m => m.DailyRate, new { @class = "form-control", type = "number", min = "0.01", step = "0.01" })
                                @Html.ValidationMessageFor(m => m.DailyRate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                @Html.LabelFor(m => m.MotorbikeConditionStatus, new { @class = "form-label fw-semibold" })
                                <select name="MotorbikeConditionStatus" class="form-select">
                                    <option value="">-- Select Condition --</option>
                                    @if (conditionStatuses != null)
                                    {
                                        foreach (var status in conditionStatuses)
                                        {
                                            <option value="@((int)status)" @(Model.MotorbikeConditionStatus == status ? "selected" : "")>@status</option>
                                        }
                                    }
                                </select>
                                @Html.ValidationMessageFor(m => m.MotorbikeConditionStatus, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.LabelFor(m => m.Status, new { @class = "form-label fw-semibold" })
                                <select name="Status" class="form-select">
                                    <option value="">-- Select Status --</option>
                                    @if (motorbikeStatuses != null)
                                    {
                                        foreach (var status in motorbikeStatuses)
                                        {
                                            <option value="@((int)status)" @(Model.Status == status ? "selected" : "")>@status</option>
                                        }
                                    }
                                </select>
                                @Html.ValidationMessageFor(m => m.Status, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-12">
                                @Html.LabelFor(m => m.Description, new { @class = "form-label fw-semibold" })
                                @Html.TextAreaFor(m => m.Description, 3, 40, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="text-end">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save me-1"></i>Save Changes
                            </button>
                            <a href="@Url.Action("Details", "Motorbike", new { id = Model.MotorbikeId })" class="btn btn-secondary ms-2">
                                <i class="fas fa-times me-1"></i>Cancel
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>